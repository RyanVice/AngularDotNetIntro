////////////////////////////////////////////////////////////////////////////
DEMO: Hello Angular - Part 1

1) Create new Web API project
2) Install-Package angularjs
3) Install-Package bootstrap
4) Update _Layout.chtml to add bootstrap.css and angular.cs

// _Layout.chtml
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    @RenderBody()

    @Scripts.Render("~/bundles/jquery")
    @RenderSection("scripts", required: false)
    <script src="~/Scripts/angular.js"></script>
</body>
</html>

// Index.cshtml
<div ng-app>
    {{ "Hello " + " AngularJs" }}
</div>

////////////////////////////////////////////////////////////////////////////
DEMO: Hello Angular - Part 2

// Index.cshtml
<div ng-app>
        <input ng-model="message"/>Hello {{message}}/>
</div>

////////////////////////////////////////////////////////////////////////////
DEMO: Compare Input - Part 1
// Index.cshtml
<div ng-app>
    <input type="text" ng-model="input1" />
    <input type="text" ng-model="input2" />
    <span class="glyphicon glyphicon-ok" ng-show="input1 && input2 && input1 === input2"></span>
    <span class="glyphicon glyphicon-remove" ng-show="input1 && input2 && input1 !== input2"></span>
</div>

////////////////////////////////////////////////////////////////////////////
DEMO: Compare Input
// Index.cshtml
<div ng-app="app">
    <div ng-controller="mainCtrl">
        <input type="text" ng-model="input1" ng-change="compareInput()"/>
        <input type="text" ng-model="input2" ng-change="compareInput()"/>
        <span class="{{iconClass}}"></span>
    </div>
</div>

// app.js
'use strict';

angular.module('app', [])
    .controller('mainCtrl', function ($scope) {
        $scope.compareInput = function () {
            if (($scope.input1) && ($scope.input2)) {
                if ($scope.input1 === $scope.input2) {
                    $scope.iconClass = "glyphicon glyphicon-ok";
                } else {
                    $scope.iconClass = "glyphicon glyphicon-remove";
                }
            }
        };
    });
	
// test.js - take one
/// <reference path="../angular.js" />
/// <reference path="../angular-resource.min.js" />
/// <reference path="../angular-route.min.js" />
/// <reference path="../angular-mocks.js" />
/// <reference path="../app/app.js" />
describe("When writing a test", function () {
    it("should pass or fail based on the logic below.", function () {
        expect(true).toBe(false);
    });
});

// test.js - take two
/// <reference path="../angular.js" />
/// <reference path="../angular-resource.min.js" />
/// <reference path="../angular-route.min.js" />
/// <reference path="../angular-mocks.js" />
/// <reference path="../app/app.js" />
describe("When calling compareInput", function () {
    var mainCtrl, scope;
    beforeEach(module("app"));
    beforeEach(inject(function ($rootScope, $controller) {
        scope = $rootScope.$new();
        mainCtrl = $controller("mainCtrl", { $scope: scope });
    }));

    it("should set iconClass to empty string when input1 or input2 are falsy", function () {
        scope.input1 = "";
        scope.input2 = "";
        scope.compareInput();
        expect(scope.iconClass).toBe("");

        scope.input1 = "a";
        scope.compareInput();
        expect(scope.iconClass).toBe("");

        scope.input1 = "";
        scope.input2 = "a";
        scope.compareInput();
        expect(scope.iconClass).toBe("");
    });

    it("should set iconClass to 'glyphicon glyphicon-ok' when input1 and input2 match", function () {
        scope.input1 = "a";
        scope.input2 = "a";
        scope.compareInput();
        expect(scope.iconClass).toBe("glyphicon glyphicon-ok");
    });

    it("should set iconClass to 'glyphicon glyphicon-remove' when input1 and input2 match", function () {
        scope.input1 = "a";
        scope.input2 = "b";
        scope.compareInput();
        expect(scope.iconClass).toBe("glyphicon glyphicon-remove");
    });
});

////////////////////////////////////////////////////////////////////////////
DEMO: Cart Part 1 - Basic Functionality

// Index.cshtml
<div ng-app="app" ng-controller="mainCtrl">
    <div class="row">
        <div class="col-md-6">
            <table class="table">
                <thead>
                <tr>
                    <td>Name</td>
                    <td>Price</td>
                    <td>Quantity</td>
                    <td>Actions</td>
                </tr>
                </thead>
                <tbody>
                <tr ng-repeat="item in items">
                    <td>{{item.name}}</td>
                    <td>{{item.price | currency}}</td>
                    <td>{{item.quantity}}</td>
                    <td>
                        <button class="button-primary">Delete</button>
                        <button class="button-primary">Edit</button>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

// app.js
'use strict';

angular.module('app', [])
    .controller('mainCtrl', function ($scope) {
    $scope.items = [
        {
            name: "Blocks",
            quantity: 2,
            price: 14.99
        },
        {
            name: "Nabi 2",
            quantity: 1,
            price: 149.99
        },
        {
            name: "Tin Robot",
            quantity: 4,
            price: 5.99
        }
    ];
});

////////////////////////////////////////////////////////////////////////////
DEMO: Cart Part 2 - Total

// index.cshtml
<div ng-app="app" ng-controller="mainCtrl">
    <div class="row">
        <div class="col-md-6">
            <table class="table">
                <thead>
                    <tr>
                        <td>Name</td>
                        <td>Price</td>
                        <td>Quantity</td>
                        <td>Actions</td>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="item in items">
                        <td>{{item.name}}</td>
                        <td>{{item.price | currency}}</td>
                        <td>{{item.quantity}}</td>
                        <td>
                            <button class="button-primary">Delete</button>
                            <button class="button-primary">Edit</button>
                        </td>
                    </tr>
                </tbody>
            </table>
            Total: {{ getTotal() | currency }}
        </div>
    </div>
</div>

// app.js
'use strict';

angular.module('app', [])
    .controller('mainCtrl', function ($scope) {
        $scope.items = [
            {
                name: "Blocks",
                quantity: 2,
                price: 14.99
            },
            {
                name: "Nabi 2",
                quantity: 1,
                price: 149.99
            },
            {
                name: "Tin Robot",
                quantity: 4,
                price: 5.99
            }
        ];

        $scope.getTotal = function () {
            var total = 0;
            $scope.items.forEach(function (item) {
                total = total + (item.price * item.quantity);
            });
            return total;
        };
    });

// tests.js
/// <reference path="../angular.js" />
/// <reference path="../angular-resource.min.js" />
/// <reference path="../angular-route.min.js" />
/// <reference path="../angular-mocks.js" />
/// <reference path="../app/app.js" />
describe("When using the shopping cart", function () {
    var mainCtrl, scope;
    beforeEach(module("app"));
    beforeEach(inject(function ($rootScope, $controller) {
        scope = $rootScope.$new();
        mainCtrl = $controller("mainCtrl", { $scope: scope });
    }));

    it("should have an accurate total.", function () {
        scope.items = [
            {
                name: "Blocks",
                quantity: 2,
                price: 14.99
            },
            {
                name: "Nabi 2",
                quantity: 1,
                price: 149.99
            },
            {
                name: "Tin Robot",
                quantity: 4,
                price: 5.99
            }
        ];

        expect(scope.getTotal()).toBe(203.93);
    });
});

////////////////////////////////////////////////////////////////////////////
DEMO: Cart Part 3 - Delete
// Index Markup
<button class="button-primary" ng-click="deleteItem($index)">Delete</button>

// app.js
$scope.deleteItem = function (index) {
            $scope.items.splice(index, 1);
        };
		
// test.js
it("should have an accurate total after a delete.", function () {
        scope.items = [
            {
                name: "Blocks",
                quantity: 2,
                price: 14.99
            },
            {
                name: "Nabi 2",
                quantity: 1,
                price: 149.99
            },
            {
                name: "Tin Robot",
                quantity: 4,
                price: 5.99
            }
        ];

        scope.deleteItem(1);
        expect(scope.getTotal()).toBe(53.94);
    });

////////////////////////////////////////////////////////////////////////////
DEMO: Cart Part 4 - Add\Edit
// tests.js
    it("should have an accurate total after an edit.", function () {
        scope.items = [
            {
                id: 1,
                name: "Blocks",
                quantity: 2,
                price: 20.00
            },
            {
                id: 2,
                name: "Nabi 2",
                quantity: 1,
                price: 150.00
            },
            {
                id: 3,
                name: "Tin Robot",
                quantity: 4,
                price: 5.00
            }
        ];

        expect(scope.getTotal()).toBe(210);

        var expectedName = "Blocks Changed";
        var expectedQuantity = 5;
        var expectedPrice = 10.00;
        scope.item = {
            id: 1,
            name: expectedName,
            quantity: expectedQuantity,
            price: expectedPrice
        };

        scope.updateItem();

        expect(scope.items[0].name).toBe(expectedName);
        expect(scope.items[0].quantity).toBe(expectedQuantity);
        expect(scope.items[0].price).toBe(expectedPrice);
        expect(scope.getTotal()).toBe(220);
    });

    it("should have an accurate total after an add.", function () {
        scope.items = [
            {
                id: 1,
                name: "Blocks",
                quantity: 2,
                price: 20.00
            },
            {
                id: 2,
                name: "Nabi 2",
                quantity: 1,
                price: 150.00
            },
            {
                id: 3,
                name: "Tin Robot",
                quantity: 4,
                price: 5.00
            }
        ];

        expect(scope.getTotal()).toBe(210);

        var expectedName = "Lego";
        var expectedQuantity = 2;
        var expectedPrice = 10.00;
        scope.item = {
            name: expectedName,
            quantity: expectedQuantity,
            price: expectedPrice
        };

        scope.addItem();
        var addedIndex = scope.items.length - 1;
        expect(scope.items[addedIndex].name).toBe(expectedName);
        expect(scope.items[addedIndex].quantity).toBe(expectedQuantity);
        expect(scope.items[addedIndex].price).toBe(expectedPrice);
        expect(scope.getTotal()).toBe(230);
    });

    it("should not be updating after loading.", function () {
        expect(scope.updating).toBe(false);
    });

    it("should got from adding to editing and back when clicking edit and then update.", function () {
        expect(scope.updating).toBe(false);

        scope.items = [
            {
                id: 1,
                name: "Blocks",
                quantity: 2,
                price: 20.00
            }
        ];

        scope.editItem(0);

        expect(scope.updating).toBe(true);

        scope.item = {
            name: "Blocks changed",
            quantity: 2,
            price: 20.00
        };

        scope.updateItem();

        expect(scope.updating).toBe(false);
    });

// index.cshtml
	<button class="button-primary"
		ng-click="deleteItem($index)">
		Delete</button>
	<button class="button-primary"
		ng-click="editItem($index)">Edit</button>

    <div>
        <h2>Details</h2>

        <table>
            <tr>
                <td>Name</td>
                <td>
                    <input type="text" ng-model="item.name" />
                </td>
            </tr>
            <tr>
                <td>Price</td>
                <td>
                    <input type="text" ng-model="item.price" />
                </td>
            </tr>
            <tr>
                <td>Quantity</td>
                <td>
                    <input type="text" ng-model="item.quantity" />
                </td>
            </tr>
        </table>
        <button class="button-primary" 
            ng-click="addItem()" 
            ng-show="!updating">Add</button>
        <button class="button-primary" 
                ng-click="updateItem()" 
            ng-show="updating">Update</button>
    </div>
		
// app.js
 $scope.updating = false;
 $scope.item = {};
 
 // add indexes to items
 
 $scope.editItem = function (index) {
            $scope.updating = true;
            $scope.item = angular.copy($scope.items[index]);
        };
 
 $scope.updateItem = function () {
     for (var i = 0; i < $scope.items.length; i++) {
         if ($scope.items[i].id === $scope.item.id) {
             $scope.items[i] = $scope.item;
             break;
         }
     }
 
     $scope.item = null;
     $scope.updating = false;
 };
 
 $scope.addItem = function () {
     $scope.items.push({
         id: $scope.items.length + 1,
         name: $scope.item.name,
         price: $scope.item.price,
         quantity: $scope.item.quantity
     });
	 
	 $scope.item = {};
 };